{
  "definition": "https://raw.githubusercontent.com/TBD54566975/tbdex-protocol/kendall/remote-url-definition/js/src/tbdex.json",
  "routes": [
    {
      "description": "Inbound Offering query",
      "direction": "INBOUND",
      "match": {
        "interface": "Records",
        "method": "Query",
        "filter.schema": "https://tbd.website/resources/tbdex/Offering"
      },
      "actions": [
        {
          "id": "1",
          "description": "Fetch offering from backend",
          "action": "httpRequest()",
          "params": {
            "method": "GET",
            "endpoint": "http://0.0.0.0:3001/tbdex/offers"
          }
        },
        {
          "id": "2",
          "description": "Create the DWN record for the offering",
          "action": "createRecordsWriteMessage()",
          "params": {
            "published": true,
            "data": "#1",
            "dataFormat": "application/json",
            "schema": "https://tbd.website/resources/tbdex/Offering"
          }
        },
        {
          "id": "3",
          "description": "Write the offering record to self",
          "action": "processMessage()",
          "params": {
            "message": "#2",
            "data": "#1"
          }
        },
        {
          "id": "4",
          "description": "Query for the newly written offering record",
          "action": "processMessage()",
          "params": {
            "message": "#dwnRequest.message"
          }
        },
        {
          "id": "5",
          "description": "Reply to client DWN Request",
          "action": "replyToDwnRequest()",
          "params": {
            "reply": "#4"
          }
        }
      ]
    },
    {
      "description": "Inbound RFQ",
      "direction": "INBOUND",
      "match": {
        "interface": "Records",
        "method": "Write",
        "protocol": "#definition.protocol",
        "protocolPath": "RFQ",
        "schema": "#definition.types.RFQ.schema"
      },
      "actions": [
        {
          "id": "1",
          "description": "PUT fetch the RFQ to the backend",
          "action": "httpRequest()",
          "params": {
            "method": "PUT",
            "endpoint": "http://0.0.0.0:3001/tbdex/rfq",
            "body": "#dwnRequest.data"
          }
        },
        {
          "id": "2",
          "description": "Process the inbound DWN Request Message",
          "action": "processMessage()",
          "params": {
            "message": "#dwnRequest.message",
            "data": "#dwnRequest.data"
          }
        },
        {
          "id": "3",
          "description": "Reply to client DWN Request",
          "action": "replyToDwnRequest()",
          "params": {
            "reply": "#2"
          }
        }
      ]
    },
    {
      "description": "Outbound Quote",
      "direction": "OUTBOUND",
      "method": "PUT",
      "path": "/quote",
      "actions": [
        {
          "id": "1",
          "description": "Lookup previous RFQ for subsequent processing",
          "action": "queryRecord()",
          "params": {
            "filter": {
              "schema": "#definition.types.RFQ.schema"
            }
          }
        },
        {
          "id": "2",
          "description": "Create the DWN record for the quote",
          "action": "createRecordsWriteMessage()",
          "params": {
            "data": "#body",
            "dataFormat": "application/json",
            "protocol": "#definition.protocol",
            "protocolPath": "RFQ/Quote",
            "schema": "#definition.types.Quote.schema",
            "recipient": "#body.to",
            "parentId": "#1.recordId",
            "contextId": "#1.contextId"
          }
        },
        {
          "id": "3",
          "description": "Write the quote record to self",
          "action": "processMessage()",
          "params": {
            "message": "#2",
            "data": "#body"
          }
        },
        {
          "id": "4",
          "description": "Send the quote to Alice",
          "action": "sendDwnRequest()",
          "params": {
            "to": "#body.to",
            "message": "#2",
            "data": "#body"
          }
        }
      ]
    }
  ]
}
